
















--> PARA BRINCAR UM POUCO COM CURSORS,



PROFESSOR USARÁ A DATABASE DE 'movieData'...












--> LÁ TEMOS OS MOVIES.... ---> SE CONTARMOS, com 'count()',




PODEMOS 

VER O NÚMERO DE FILMES...













--> '.count()'

é um method que 


DEVEMOS CHAINAR EM 1 CURSOR... -> (PQ FIND NOS RETORNA UM CURSOR)...















--> count SEMPRE VAI 'LOOK AT THE CURSOR'

e aí 

vai determinar 







__ QUANTOS__ ELEMENTS_ POSSO CONSEGUIR DESSE CURSOR...
















--> OK, MAS COMO ISSO FUNCIONA NO DATABASE-SIDE?













--> COMO O '.count()' consegue saber QUANTOS 


DOCUMENTS 

HÁ DENTRO DA DATABASE?








--> bem, acho que é pq 

'count()' , o CONTAR de documents é mais RAPIDO DO QUE O READ...











--> ISSO ACONTECE PQ NO DATABASE-SIDE 






A QUERY JÁ TERÁ 'RODADO',






e 


aí 



,

portanto,


informação como essa 



JÁ É CARREGADA
 



 NA 

 MEMORY,

 E AÍ 

 É 

 ENTREGUE A NÓS...











 -------> ok... 
















 -> PODEMOS EXECUTAR 



 'db.movies.find().pretty()' --------> VAMOS OBTER 20 

 DOCUMENTS... -> isso é um shortcut providenciado por nossa shell....
















 ---> A SHELL VAI NOS DAR O CURSOR, MESMO ASSIM.... --> E 



 SE 




 DIGITARMos 'IT',




VEMOS OS PRÓXIMOS 








20 DOCUMENTS,
 
 ETC ETC...















 OBS: 






 o COMANDO 'IT' 

 NÃO VAI FICAR DISPONÍVEL A VOCÊ, QUANDO VOCÊ ESTIVER TRABALHANDO COM UM DRIVER...

















 --> COM O DRIVER,

 VOCÊ 

 VAI TRABALHAR DE FORMA DIFERENTE, COM O CURSOR....

















 ---> BEM.... NO 'find()',


 AÍ 



  





,




__ GERALMENTE _ EM  MTOS 

DRIVERS,







VOCê TERÁ UM 




METHOD '.next()'


QUE VOCÊ PODERÁ CHAMAR... 









ex:










db.movies.find().next()






















--> SE CHAMAMOS '.find().next()'



NESSA NOSSA 




COLLECTION DE 'movies',




VAMOS OBTER EXATAMENTE 1 ÚNICO DOCUMENT.... ---------> E COMO TEREMOS OBTIDO SÓ 


1 


OBJECT, SOLITÁRIO,








NÃO VAMOS PODER DIGITAR 'it'


PARA __ VER__ MAIS DOCUMENTS (pq isso aí não será um cursor, justsamente)....






















---> OK... GANHAMOS DE VOLTA APENAS 1 DOCUMENT,



ISSO PQ 

O 

'next()'





NOS DÁ 



''THE NEXT DOCUMENT'''' -----> A COISA LEGAL É QUE 





AGORA,

COMO NÓS CHAMAMOS '


.next()',





NÓS RECEBEMOS DE VOLTa 



'
glee'... ,



com o id de '8'...















--> E SE CHAMARMOS 









'db.movies.find().next()'





MAIS UMA VEZ,



NO TERMINAL DO MONGOSHELL,




VAMOS 








__ _CONSEGUIR__ O 











MESMO RESULTADO,


PQ 



A NOSSA QUERY TERÁ 'RODADO FROM SCRATCH' (



    cada run de '.next()' em uma query vai fazer com que SEJA PULADO 1 ELEMENTO NA 'FILA' de documents... 
)





















--> ISSO É DIFERNTE, NO CASO,



SE NÓS __ ARMAZENARMOS (no mongoshell, mesmo, pq ISSO É POSSÍVEL, PQ O MONGOSHELL É BASEADO EM JAVASCRIPT)





O NOSSO 



CURSOR EM UMA _ __ CONSTANTE/VARIABLE...













ex:












const dataCursor = db.movies.find()















--> ARMAZENAMOS ESSE FIND COM NENHUMA CONDIÇÃO, PARA ENTÃO 'acharmos todos os movies'' --> e isso  VAI NOS RETORNAR UM __ CURSOR__, COMO VOCÊ JÁ SABE...


















-_> AÍ, A PARTIR DISSO,



PODEMOS 

ESCREVER:









const dataCursor = db.movies.find()




dataCursor.next() 



















-_> ESSE 'dataCursor.next()'




VAI 



NOS RETORNAR AQUELE 


'FIRST ELEMENt',

que é 



GLEE....











ex












const dataCursor = db.movies.find()




dataCursor.next() 




(


    RETORNA O 'GLEE', DE ID '8'...
)
















---------------> 







MAS SE O PROFESSOR 


PEGAR E CHAMAR ESSE NEGÓCIO __ MÚLTIPLAS VEZES DURANTE O RUNTIME 


do 


shell,


tipo assim:







------------------------------------------




const dataCursor = db.movies.find()




dataCursor.next() ///// -> vai retornar O 'GLEE', de id '8'...



----
espera
-----



dataCursor.next() //// --> VAI RETORNAR OUTRO MOVIE, de id '7'... (a fila avançou)...





-----------------------------------------------------









------------------------------------













MAIS UM EXEMPLO:










const dataCursor = db.movies.find()




dataCursor.next() ///// -> vai retornar O 'GLEE', de id '8'...



----
espera
-----



dataCursor.next() //// --> VAI RETORNAR OUTRO MOVIE, de id '7'... (a fila avançou)...



----
espera
-----



dataCursor.next() //// --> VAI RETORNAR OUTRO MOVIE, de id '6'... (a fila avançou)...










--------------------------------------











MAS É CLARO QUE O CURSOR _ POSSUI OUTROS METHODS...
















---------> QUE METHODS, NO CASO?












-> bem, nosso data cursor ainda segue sendo 'db.movies.find({})'....















SE O EXECUTAMOS 'SOLTO',








´so escrevendo 






'dataCursor()',






VAMOS RECEBER 20 ELEMENTS, COISA NORMAL...









EX:

















> dataCursor
{ "_id" : ObjectId("62052b52d9ec2278a3f59328"), "id" : 4, "url" : "http://www.tvmaze.com/shows/4/arrow", "name" : "Arrow", "type" : "Scripted", "language" : "English", "genres" : [ "Drama", "Action", "Science-Fiction" ], "status" : "Running", "runtime" : 60, "premiered" : "2012-10-10", "officialSite" : "http://www.cwtv.com/shows/arrow", "schedule" : { "time" : "20:00", "days" : [ "Monday" ] }, "rating" : { "average" : 7.6 }, "weight" : 99, "network" : { "id" : 5, "name" : "The CW", "country" : { "name" : "United States", "code" : "US", "timezone" : "America/New_York" } }, "webChannel" : null, "externals" : { "tvrage" : 30715, "thetvdb" : 257655, "imdb" : "tt2193021" }, "image" : { "medium" : "http://static.tvmaze.com/uploads/images/medium_portrait/165/414895.jpg", "original" : "http://static.tvmaze.com/uploads/images/original_untouched/165/414895.jpg" }, "summary" : "<p>After a violent shipwreck, billionaire playboy Oliver Queen was missing and presumed dead for five years before being discovered alive on a remote island in the Pacific. He returned home to Starling City, welcomed by his devoted mother Moira, beloved sister Thea and former flame Laurel Lance. With the aid of his trusted chauffeur/bodyguard John Diggle, the computer-hacking skills of Felicity Smoak and the occasional, reluctant assistance of former police detective, now beat cop, Quentin Lance, Oliver has been waging a one-man war on crime.</p>", "updated" : 1536062117, "_links" : 
{ "self" : { "href" : "http://api.tvmaze.com/shows/4" }, "previousepisode" : { "href" : "http://api.tvmaze.com/episodes/1426875" }, "nextepisode" : { "href" : "http://api.tvmaze.com/episodes/1473817" } } }
{ "_id" : ObjectId("62052b52d9ec2278a3f59329"), "id" : 14, "url" : "http://www.tvmaze.com/shows/14/continuum", "name" : "Continuum", "type" : "Scripted", "language" : "English", "genres" : [ "Drama", "Crime", "Science-Fiction" ], "status" : "Ended", "runtime" : 60, "premiered" : "2012-05-27", 
"officialSite" : "http://www.showcase.ca/Continuum", "schedule" : { "time" : "21:00", "days" : [ "Sunday" ] }, "rating" : { "average" : 8.2 }, "weight" : 84, "network" : { "id" : 6, "name" : "Showcase", "country" : { "name" : "Canada", "code" : "CA", "timezone" : "America/Halifax" } }, "webChannel" : null, "externals" : { "tvrage" : 30789, "thetvdb" : 258171, "imdb" : "tt1954347" }, "image" : { "medium" : "http://static.tvmaze.com/uploads/images/medium_portrait/0/184.jpg", "original" : "http://static.tvmaze.com/uploads/images/original_untouched/0/184.jpg" }, "summary" : "<p><b>Continuum </b>is a one-hour police drama centered on Kiera Cameron, a regular cop from 65 years in the future who finds herself trapped in present day 
Vancouver. She is alone, a stranger in a strange land, and has eight of the most ruthless criminals from the future, known as Liber8, loose in the 
city.</p><p>Lucky for Kiera, through the use of her CMR (cellular memory recall), a futuristic liquid chip technology implanted in her brain, she connects with Alec Sadler, a seventeen-year-old tech genius. When Kiera calls and Alec answers, a very unique partnership begins.</p><p>Kiera's first desire is to get \"home.\" But until she figures out a way to do that, she must survive in our time period and use all the resources available to her to track and capture the terrorists before they alter history enough to change the course of the future. After all, what's the point of going 
back if the future isn't the one you left?</p>", "updated" : 1536247355, "_links" : { "self" : { "href" : "http://api.tvmaze.com/shows/14" }, "previousepisode" : { "href" : "http://api.tvmaze.com/episodes/228308" } } }
{ "_id" : ObjectId("62052b52d9ec2278a3f5932a"), "id" : 15, "url" : "http://www.tvmaze.com/shows/15/constantine", "name" : "Constantine", "type" : "Scripted", "language" : "English", "genres" : [ "Drama", "Action", "Horror" ], "status" : "Ended", "runtime" : 60, "premiered" : "2014-10-24", "officialSite" : "https://www.nbc.com/constantine", "schedule" : { "time" : "20:00", "days" : [ "Friday" ] }, "rating" : { "average" : 7.4 }, "weight" 
: 87, "network" : { "id" : 1, "name" : "NBC", "country" : { "name" : "United States", "code" : "US", "timezone" : "America/New_York" } }, "webChannel" : null, "externals" : { "tvrage" : 38109, "thetvdb" : 273690, "imdb" : "tt3489184" }, "image" : { "medium" : "http://static.tvmaze.com/uploads/images/medium_portrait/0/154.jpg", "original" : "http://static.tvmaze.com/uploads/images/original_untouched/0/154.jpg" }, "summary" : "<p>Based on 
the wildly popular comic book series \"Hellblazer\" from DC Comics, seasoned demon hunter and master of the occult John Constantine is armed with a ferocious knowledge of the dark arts and a wickedly naughty wit. He fights the good fight - or at least he did. With his soul already damned to hell, he's decided to abandon his campaign against evil until a series of events thrusts him back into the fray, and he'll do whatever it takes to protect the innocent. With the balance of good and evil on the line‎, <b>Constantine </b>will use his skills to travel the country, find the supernat
ural terrors that threaten our world and send them back where they belong. After that, who knows... maybe there's hope for him and his soul after all.</p>", "updated" : 1516808973, "_links" : { "self" : { "href" : "http://api.tvmaze.com/shows/15" }, "previousepisode" : { "href" : "http://api.tvmaze.com/episodes/122719" } } }
{ "_id" : ObjectId("62052b52d9ec2278a3f5932b"), "id" : 13, "url" : "http://www.tvmaze.com/shows/13/the-flash", "name" : "The Flash", "type" : "Scripted", "language" : "English", "genres" : [ "Drama", "Action", "Science-Fiction" ], "status" : "Running", "runtime" : 60, "premiered" : "2014-10-07", "officialSite" : "http://www.cwtv.com/shows/the-flash/", "schedule" : { "time" : "20:00", "days" : [ "Tuesday" ] }, "rating" : { "average" : 8.1 }, "weight" : 99, "network" : { "id" : 5, "name" : "The CW", "country" : { "name" : "United States", "code" : "US", "timezone" : "America/New_York" } }, "webChannel" : null, "externals" : { "tvrage" : 36939, "thetvdb" : 279121, "imdb" : "tt3107288" }, "image" : { "medium" : "http://static.tvmaze.com/uploads/images/medium_portrait/163/409858.jpg", "original" : "http://static.tvmaze.com/uploads/images/original_untouched/163/409858.jpg" }, "summary" : "<p>After a particle accelerator causes a freak storm, CSI Investigator Barry Allen is struck by lightning and falls into a coma. Months later he awakens with the power of super speed, granting him the ability to move through Central City like an unseen guardian angel. Though initially excited by his newfound powers, Barry is shocked to discover he is not the only \"meta-human\" who was created in the wake of the accelerator explosion -- and not everyone is using their new powers for good. Barry partners with S.T.A.R. Labs and dedicates his life to protect the innocent. For now, only a few close friends and associates know that Barry is literally the fastest man alive, but it won't be long before the world learns what Barry Allen has become...The Flash!</p>", "updated" : 1535545468, "_links" : { "self" : { "href" : "http://api.tvmaze.com/shows/13" }, "previousepisode" : { "href" : "http://api.tvmaze.com/episodes/1426878" }, "nextepisode" : { "href" : "http://api.tvmaze.com/episodes/1473791" } } }     
{ "_id" : ObjectId("62052b52d9ec2278a3f5932c"), "id" : 18, "url" : "http://www.tvmaze.com/shows/18/the-amazing-race", "name" : "The Amazing Race", 
"type" : "Reality", "language" : "English", "genres" : [ "Action", "Adventure", "Family" ], "status" : "Running", "runtime" : 60, "premiered" : "2001-09-05", "officialSite" : "http://www.cbs.com/shows/amazing_race/", "schedule" : { "time" : "20:00", "days" : [ "Wednesday" ] }, "rating" : { "average" : 7.5 }, "weight" : 89, "network" : { "id" : 2, "name" : "CBS", "country" : { "name" : "United States", "code" : "US", "timezone" : "America/New_York" } }, "webChannel" : null, "externals" : { "tvrage" : 5566, "thetvdb" : 77666, "imdb" : "tt0285335" }, "image" : { "medium" : "http://static.tvmaze.com/uploads/images/medium_portrait/141/352923.jpg", "original" : "http://static.tvmaze.com/uploads/images/original_untouched/141/352923.jpg" }, "summary" : "<p><b>The Amazing Race </b>is an adventure reality show in which 10-12 teams race around the world and compete vs each other in very difficult tasks. Each team consists of two racers. At the end the winning team is granted 1 Million Dollars. The show is hosted by Phil Keoghan.</p>", "updated" : 1532342006, "_links" : { "self" : { "href" : "http://api.tvmaze.com/shows/18" }, "previousepisode" : { "href" : "http://api.tvmaze.com/episodes/1365499" } } }
{ "_id" : ObjectId("62052b52d9ec2278a3f5932d"), "id" : 16, "url" : "http://www.tvmaze.com/shows/16/penny-dreadful", "name" : "Penny Dreadful", "type" : "Scripted", "language" : "English", "genres" : [ "Drama", "Horror", "Thriller" ], "status" : "Ended", "runtime" : 60, "premiered" : "2014-05-11", "officialSite" : "http://www.sho.com/penny-dreadful", "schedule" : { "time" : "21:00", "days" : [ "Sunday" ] }, "rating" : { "average" : 8.3 }, "weight" : 84, "network" : { "id" : 9, "name" : "Showtime", "country" : { "name" : "United States", "code" : "US", "timezone" : "America/New_York" } }, "webChannel" : null, "externals" : { "tvrage" : 34172, "thetvdb" : 265766, "imdb" : "tt2628232" }, "image" : { "medium" : "http://static.tvmaze.com/uploads/images/medium_portrait/48/122237.jpg", "original" : "http://static.tvmaze.com/uploads/images/original_untouched/48/122237.jpg" }, "summary" : "<p>Some of literature's most terrifying characters, including Dr. Frankenstein and his monster, Dorian Gray, and iconic figures from the novel Dracula are lurking in the darkest corners of Victorian London. They are joined by a core of original characters in a complex, frightening new narrative. <b>Penny Dreadful </b>is a psychological thriller filled with dark mystery and suspense, where personal demons from the past can be stronger than vampires, evil spirits and immortal beasts.</p>", "updated" : 1536427994, "_links" : { "self" : { "href" : "http://api.tvmaze.com/shows/16" }, "previousepisode" : { "href" : "http://api.tvmaze.com/episodes/766196" } } }
{ "_id" : ObjectId("62052b52d9ec2278a3f5932e"), "id" : 19, "url" : "http://www.tvmaze.com/shows/19/supernatural", "name" : "Supernatural", "type" : "Scripted", "language" : "English", "genres" : [ "Drama", "Action", "Supernatural" ], "status" : "Running", "runtime" : 60, "premiered" : "2005-09-13", "officialSite" : "http://www.cwtv.com/shows/supernatural", "schedule" : { "time" : "20:00", "days" : [ "Thursday" ] }, "rating" : { "average" : 8.4 }, "weight" : 99, "network" : { "id" : 5, "name" : "The CW", "country" : { "name" : "United States", "code" : "US", "timezone" : "America/New_York" } }, "webChannel" : null, "externals" : { "tvrage" : 5410, "thetvdb" : 78901, "imdb" : "tt0460681" }, "image" : { "medium" : "http://static.tvmaze.com/uploads/images/medium_portrait/149/374777.jpg", "original" : "http://static.tvmaze.com/uploads/images/original_untouched/149/374777.jpg" }, "summary" : "<p>The show follows brothers Sam and Dean Winchester, who travel across America in a black 1967 Chevy Impala investigating and combating paranormal events and other unexplained occurrences, many of them based on American urban legends and folklore as well as classic supernatural creatures such as vampires, werewolves, and ghosts.</p>", "updated" : 1536045363, "_links" : { "self" : { "href" : "http://api.tvmaze.com/shows/19" }, "previousepisode" : { "href" : "http://api.tvmaze.com/episodes/1422914" }, "nextepisode" : { "href" : "http://api.tvmaze.com/episodes/1473821" } } }
{ "_id" : ObjectId("62052b52d9ec2278a3f5932f"), "id" : 21, "url" : "http://www.tvmaze.com/shows/21/the-last-ship", "name" : "The Last Ship", "type" : "Scripted", "language" : "English", "genres" : [ "Drama", "Action", "Thriller" ], "status" : "Running", "runtime" : 60, "premiered" : "2014-06-22", "officialSite" : "http://www.tntdrama.com/shows/the-last-ship", "schedule" : { "time" : "21:00", "days" : [ "Sunday" ] }, "rating" : { "average" : 7.8 }, "weight" : 100, "network" : { "id" : 14, "name" : "TNT", "country" : { "name" : "United States", "code" : "US", "timezone" : "America/New_York" } }, "webChannel" : null, "externals" : { "tvrage" : 33158, "thetvdb" : 269533, "imdb" : "tt2402207" }, "image" : { "medium" : "http://static.tvmaze.com/uploads/images/medium_portrait/164/412464.jpg", "original" : "http://static.tvmaze.com/uploads/images/original_untouched/164/412464.jpg" }, "summary" : "<p>Their mission is simple: Find a cure. Stop the virus. Save the world. When a global pandemic wipes out eighty percent of the planet's population, the crew of a lone naval destroyer must find a way to pull humanity from the brink of extinction.</p>", "updated" : 1536575637, "_links" : { "self" : { "href" : "http://api.tvmaze.com/shows/21" }, "previousepisode" : { "href" : "http://api.tvmaze.com/episodes/1499133" }, 
"nextepisode" : { "href" : "http://api.tvmaze.com/episodes/1499134" } } }
{ "_id" : ObjectId("62052b52d9ec2278a3f59330"), "id" : 22, "url" : "http://www.tvmaze.com/shows/22/true-blood", "name" : "True Blood", "type" : "Scripted", "language" : "English", "genres" : [ "Drama", "Romance", "Supernatural" ], "status" : "Ended", "runtime" : 60, "premiered" : "2008-09-07", "officialSite" : "http://www.hbo.com/true-blood", "schedule" : { "time" : "21:00", "days" : [ "Sunday" ] }, "rating" : { "average" : 8 }, "weight" : 89, "network" : { "id" : 8, "name" : "HBO", "country" : { "name" : "United States", "code" : "US", "timezone" : "America/New_York" } }, "webChannel" : null, "externals" : { "tvrage" : 12662, "thetvdb" : 82283, "imdb" : "tt0844441" }, "image" : { "medium" : "http://static.tvmaze.com/uploads/images/medium_portrait/0/241.jpg", "original" : "http://static.tvmaze.com/uploads/images/original_untouched/0/241.jpg" }, "summary" : "<p><b>True Blood </b>is a horror/drama based on a series of novels called <i>The Southern American Vampires Mysteries</i>. It focuses on Sookie Stackhouse and 
her various encounters with vampires and other supernatural beings. The show is centred in the small town of Bon Temps in Louisiana. The show focuses heavily on the co-existence of humans with vampires. The show also touches on several other controversial issues involving equal rights, violence, discrimination and religion.</p>", "updated" : 1535396317, "_links" : { "self" : { "href" : "http://api.tvmaze.com/shows/22" }, "previousepisode" : { "href" : "http://api.tvmaze.com/episodes/1292" } } }
{ "_id" : ObjectId("62052b52d9ec2278a3f59331"), "id" : 20, "url" : "http://www.tvmaze.com/shows/20/the-strain", "name" : "The Strain", "type" : "Scripted", "language" : "English", "genres" : [ "Drama", "Horror", "Thriller" ], "status" : "Ended", "runtime" : 60, "premiered" : "2014-07-13", "officialSite" : "http://www.fxnetworks.com/thestrain", "schedule" : { "time" : "22:00", "days" : [ "Sunday" ] }, "rating" : { "average" : 7.6 }, "weight" : 90, "network" : { "id" : 13, "name" : "FX", "country" : { "name" : "United States", "code" : "US", "timezone" : "America/New_York" } }, "webChannel" : null, "externals" : { "tvrage" : 33229, "thetvdb" : 276564, "imdb" : "tt2654620" }, "image" : { "medium" : "http://static.tvmaze.com/uploads/images/medium_portrait/130/325621.jpg", "original" : "http://static.tvmaze.com/uploads/images/original_untouched/130/325621.jpg" }, "summary" : "<p><b>The Strain</b> is a high-concept thriller that tells the story of Dr. Ephraim Goodweather, the head of the Center for Disease Control Canary Team in New York City. He and his team are called upon to investigate a mysterious viral outbreak with hallmarks of an ancient and evil strain of vampirism. As the strain spreads, Goodweather, his team, and an assembly of everyday New Yorkers wage war for the fate of humanity itself.</p>", "updated" : 1536276977, "_links" : { "self" : { "href" : "http://api.tvmaze.com/shows/20" }, "previousepisode" : { "href" : "http://api.tvmaze.com/episodes/1128366" } } }
{ "_id" : ObjectId("62052b52d9ec2278a3f59332"), "id" : 24, "url" : "http://www.tvmaze.com/shows/24/hawaii-five-0", "name" : "Hawaii Five-0", "type" : "Scripted", "language" : "English", "genres" : [ "Drama", "Action", "Crime" ], "status" : "Running", "runtime" : 60, "premiered" : "2010-09-20", "officialSite" : "http://www.cbs.com/shows/hawaii_five_0/", "schedule" : { "time" : "21:00", "days" : [ "Friday" ] }, "rating" : { "average" : 7.9 }, "weight" : 98, "network" : { "id" : 2, "name" : "CBS", "country" : { "name" : "United States", "code" : "US", "timezone" : "America/New_York" } }, "webChannel" : null, "externals" : { "tvrage" : 24840, "thetvdb" : 164541, "imdb" : "tt1600194" }, "image" : { "medium" : "http://static.tvmaze.com/uploads/images/medium_portrait/135/337500.jpg", "original" : "http://static.tvmaze.com/uploads/images/original_untouched/135/337500.jpg" }, "summary" : "<p><b>Hawaii Five-0</b> is a contemporary take on the classic series about a new elite federalized task force whose mission is to wipe out the crime that washes up on the Islands' sun-drenched beaches. Detective Steve McGarrett, a decorated Naval officer-turned-cop, returned to Oahu to investigate his father's murder and stayed after Hawaii's former governor persuaded him to head up the new team: his rules, no red tape and full blanket authority to hunt down the biggest \"game\" in town. Joining McGarrett is Detective Danny \"Danno\" Williams, a relocated ex-New Jersey cop - a working man in paradise who prefers skyscrapers to the coastline - but who's committed to keeping the Islands safe for his young daughter; Chin Ho Kelly, an ex-Honolulu police detective and former protégé of McGarrett's father who was wrongly accused of corruption; Dr. Max Bergman, the 
quirky coroner; Chin's cousin, Kono Kalakaua, a beautiful and fearless native; and Captain Lou Grover, who formerly headed Hawaii's SWAT unit. Joining them is Jerry Ortega, a former classmate of Chin's and the Island's local conspiracy theorist. The state's brash FIVE-0 unit, who may spar and 
jest among themselves, remain determined to eliminate the seedy elements from the 50th state.</p>", "updated" : 1536292815, "_links" : { "self" : { "href" : "http://api.tvmaze.com/shows/24" }, "previousepisode" : { "href" : "http://api.tvmaze.com/episodes/1431738" }, "nextepisode" : { "href" : "http://api.tvmaze.com/episodes/1494027" } } }
{ "_id" : ObjectId("62052b52d9ec2278a3f59333"), "id" : 8, "url" : "http://www.tvmaze.com/shows/8/glee", "name" : "Glee", "type" : "Scripted", "language" : "English", "genres" : [ "Drama", "Music", "Romance" ], "status" : "Ended", "runtime" : 60, "premiered" : "2009-05-19", "officialSite" : "http://www.fox.com/glee", "schedule" : { "time" : "21:00", "days" : [ "Tuesday" ] }, "rating" : { "average" : 6.7 }, "weight" : 71, "network" : { "id" : 4, "name" : "FOX", "country" : { "name" : "United States", "code" : "US", "timezone" : "America/New_York" } }, "webChannel" : null, "externals" : { "tvrage" : 21704, "thetvdb" : 83610, "imdb" : "tt1327801" }, "image" : { "medium" : "http://static.tvmaze.com/uploads/images/medium_portrait/0/73.jpg", "original" : "http://static.tvmaze.com/uploads/images/original_untouched/0/73.jpg" }, "summary" : "<p><b>Glee </b>is a musical comedy about a group of ambitious and talented young adults in search of strength, acceptance and, ultimately, their voice.</p>", "updated" : 1536145055, "_links" : { "self" : { "href" : "http://api.tvmaze.com/shows/8" }, "previousepisode" : { "href" : "http://api.tvmaze.com/episodes/142185" } } }      
{ "_id" : ObjectId("62052b52d9ec2278a3f59334"), "id" : 23, "url" : "http://www.tvmaze.com/shows/23/once-upon-a-time-in-wonderland", "name" : "Once 
Upon a Time in Wonderland", "type" : "Scripted", "language" : "English", "genres" : [ "Adventure", "Fantasy" ], "status" : "Ended", "runtime" : 60, "premiered" : "2013-10-10", "officialSite" : null, "schedule" : { "time" : "20:00", "days" : [ "Thursday" ] }, "rating" : { "average" : 6.7 }, "weight" : 80, "network" : { "id" : 3, "name" : "ABC", "country" : { "name" : "United States", "code" : "US", "timezone" : "America/New_York" } }, "webChannel" : null, "externals" : { "tvrage" : 35215, "thetvdb" : 269654, "imdb" : "tt2802008" }, "image" : { "medium" : "http://static.tvmaze.com/uploads/images/medium_portrait/73/183661.jpg", "original" : "http://static.tvmaze.com/uploads/images/original_untouched/73/183661.jpg" }, "summary" : "<p>In Victorian England, the young and beautiful Alice tells a tale of a strange new land that exists on the other side of a rabbit hole. An invisible cat, a hookah smoking caterpillar and playing-cards that talk are just some of the fantastic things she's seen during this impossible adventure. Surely this troubled girl must be insane, and her doctors aim to cure her with a treatment that will make her forget everything. Alice seems ready to put it all behind her, especially the painful memory of the genie she fell in love with and lost forever -- the handsome and mysterious Cyrus . But deep down Alice knows this world is real, and just in the nick of time the sardonic Knave of Hearts and the irrepressible White Rabbit arrive to save her from a doomed fate. Together the trio will take a tumble down the rabbit hole to this Wonderland where nothing is impossible.</p>", 
"updated" : 1514481175, "_links" : { "self" : { "href" : "http://api.tvmaze.com/shows/23" }, "previousepisode" : { "href" : "http://api.tvmaze.com/episodes/1313" } } }
{ "_id" : ObjectId("62052b52d9ec2278a3f59335"), "id" : 26, "url" : "http://www.tvmaze.com/shows/26/hellsing-ultimate", "name" : "Hellsing Ultimate", "type" : "Animation", "language" : "Japanese", "genres" : [ "Drama", "Action", "Anime", "Horror" ], "status" : "Ended", "runtime" : 50, "premiered" : "2006-02-10", "officialSite" : null, "schedule" : { "time" : "12:00", "days" : [ "Wednesday" ] }, "rating" : { "average" : 8.1 }, "weight" : 0, "network" : { "id" : 159, "name" : "TBS", "country" : { "name" : "Japan", "code" : "JP", "timezone" : "Asia/Tokyo" } }, "webChannel" : null, "externals" : { "tvrage" : 29109, "thetvdb" : 263688, "imdb" : "tt0495212" }, "image" : { "medium" : "http://static.tvmaze.com/uploads/images/medium_portrait/22/55037.jpg", "original" : "http://static.tvmaze.com/uploads/images/original_untouched/22/55037.jpg" }, "summary" : "<p><b>Hellsing Ultimate</b>, unlike the 13-part <i>Hellsing</i> series, follows the manga of the same name very closely. Alucard being the main protagonist and anti-hero/vampire. <i>Hellsing Ultimate</i> is a 10-part series of OVAs whereby Alucard turns Sera's into a vampire. The main focus of the plot being on an 
enemy neo-nazi group.</p>", "updated" : 1504676814, "_links" : { "self" : { "href" : "http://api.tvmaze.com/shows/26" }, "previousepisode" : { "href" : "http://api.tvmaze.com/episodes/1437" } } }
{ "_id" : ObjectId("62052b52d9ec2278a3f59336"), "id" : 25, "url" : "http://www.tvmaze.com/shows/25/hellsing", "name" : "Hellsing", "type" : "Animation", "language" : "Japanese", "genres" : [ "Anime", "Horror", "Supernatural" ], "status" : "Ended", "runtime" : 30, "premiered" : "2001-10-10", "officialSite" : null, "schedule" : { "time" : "", "days" : [ "Wednesday" ] }, "rating" : { "average" : 8.3 }, "weight" : 22, "network" : { "id" : 131, "name" : "Fuji TV", "country" : { "name" : "Japan", "code" : "JP", "timezone" : "Asia/Tokyo" } }, "webChannel" : null, "externals" : { "tvrage" 
: 9139, "thetvdb" : 71278, "imdb" : "tt0325547" }, "image" : { "medium" : "http://static.tvmaze.com/uploads/images/medium_portrait/0/247.jpg", "original" : "http://static.tvmaze.com/uploads/images/original_untouched/0/247.jpg" }, "summary" : "<p><b>Hellsing </b>is a 13-part anime based on the 
manga of the same name. The plot is significantly difficult to that of the the manga although the characters are the same. The show mainly focuses 
on the hellsing institute that houses the anti-hero named Alucard who swore loyalty to the Helsing family many years before. Alucard being the first ever vampire takes on a new apprentice named Sera's.</p>", "updated" : 1504676730, "_links" : { "self" : { "href" : "http://api.tvmaze.com/shows/25" }, "previousepisode" : { "href" : "http://api.tvmaze.com/episodes/398491" } } }
{ "_id" : ObjectId("62052b52d9ec2278a3f59337"), "id" : 27, "url" : "http://www.tvmaze.com/shows/27/berserk", "name" : "Berserk", "type" : "Animation", "language" : "Japanese", "genres" : [ "Anime", "Fantasy", "Horror" ], "status" : "Ended", "runtime" : 25, "premiered" : "1997-10-07", "officialSite" : null, "schedule" : { "time" : "", "days" : [ "Tuesday" ] }, "rating" : { "average" : 9.2 }, "weight" : 58, "network" : { "id" : 137, "name" : "NTV", "country" : { "name" : "Japan", "code" : "JP", "timezone" : "Asia/Tokyo" } }, "webChannel" : null, "externals" : { "tvrage" : 2764, "thetvdb" : 73752, "imdb" : "tt0318871" }, "image" : { "medium" : "http://static.tvmaze.com/uploads/images/medium_portrait/0/249.jpg", "original" : "http://static.tvmaze.com/uploads/images/original_untouched/0/249.jpg" }, "summary" : "<p><b>Berserk </b>is a 25-part anime set in a dark fantasy/horror environment whereby the series focuses on the main character guts; a lone swordman who later meets up with a group of mercenaries called the band of the hawk. The leader of this band holds a strange necklace called a behelit that will only lead to evil.</p>", "updated" : 1504676900, "_links" : { "self" : { "href" : "http://api.tvmaze.com/shows/27" }, "previousepisode" : { "href" : "http://api.tvmaze.com/episodes/1462" } } }
{ "_id" : ObjectId("62052b52d9ec2278a3f59338"), "id" : 10, "url" : "http://www.tvmaze.com/shows/10/grimm", "name" : "Grimm", "type" : "Scripted", "language" : "English", "genres" : [ "Drama", "Crime", "Supernatural" ], "status" : "Ended", "runtime" : 60, "premiered" : "2011-10-28", "officialSite" : "http://www.nbc.com/grimm", "schedule" : { "time" : "20:00", "days" : [ "Friday" ] }, "rating" : { "average" : 8.5 }, "weight" : 95, "network" : { "id" : 1, "name" : "NBC", "country" : { "name" : "United States", "code" : "US", "timezone" : "America/New_York" } }, "webChannel" : null, "externals" : { "tvrage" : 28352, "thetvdb" : 248736, "imdb" : "tt1830617" }, "image" : { "medium" : "http://static.tvmaze.com/uploads/images/medium_portrait/69/174906.jpg", "original" : "http://static.tvmaze.com/uploads/images/original_untouched/69/174906.jpg" }, "summary" : "<p><b>Grimm </b>is a drama series inspired by the classic Grimm Brothers' Fairy Tales. After Portland homicide detective Nick Burkhardt discovers he's descended from an elite line of criminal profilers known as \"Grimms\", he increasingly finds his responsibilities as a detective at odds with his new responsibilities as a Grimm.</p>", "updated" : 1531998068, "_links" : { "self" : { "href" : "http://api.tvmaze.com/shows/10" }, "previousepisode" : { "href" 
: "http://api.tvmaze.com/episodes/1009811" } } }
{ "_id" : ObjectId("62052b52d9ec2278a3f59339"), "id" : 29, "url" : "http://www.tvmaze.com/shows/29/vikings", "name" : "Vikings", "type" : "Scripted", "language" : "English", "genres" : [ "Drama", "Action", "History" ], "status" : "Running", "runtime" : 60, "premiered" : "2013-03-03", "officialSite" : "http://www.history.com/shows/vikings", "schedule" : { "time" : "21:00", "days" : [ "Wednesday" ] }, "rating" : { "average" : 8.8 }, "weight" : 99, "network" : { "id" : 118, "name" : "History", "country" : { "name" : "Canada", "code" : "CA", "timezone" : "America/Halifax" } }, "webChannel" : null, "externals" : { "tvrage" : 31136, "thetvdb" : 260449, "imdb" : "tt2306299" }, "image" : { "medium" : "http://static.tvmaze.com/uploads/images/medium_portrait/139/348365.jpg", "original" : "http://static.tvmaze.com/uploads/images/original_untouched/139/348365.jpg" }, "summary" : "<p><b>Vikings</b> transports us to the brutal and mysterious world of Ragnar Lothbrok, a Viking warrior and farmer who yearns to explore - and raid 
- the distant shores across the ocean.</p>", "updated" : 1532960010, "_links" : { "self" : { "href" : "http://api.tvmaze.com/shows/29" }, "previousepisode" : { "href" : "http://api.tvmaze.com/episodes/1315259" }, "nextepisode" : { "href" : "http://api.tvmaze.com/episodes/1499249" } } }        
{ "_id" : ObjectId("62052b52d9ec2278a3f5933a"), "id" : 28, "url" : "http://www.tvmaze.com/shows/28/californication", "name" : "Californication", "type" : "Scripted", "language" : "English", "genres" : [ "Drama", "Comedy" ], "status" : "Ended", "runtime" : 30, "premiered" : "2007-08-13", "officialSite" : "http://www.sho.com/sho/californication/home", "schedule" : { "time" : "21:30", "days" : [ "Sunday" ] }, "rating" : { "average" : 8.1 }, "weight" : 78, "network" : { "id" : 9, "name" : "Showtime", "country" : { "name" : "United States", "code" : "US", "timezone" : "America/New_York" } }, "webChannel" : null, "externals" : { "tvrage" : 15319, "thetvdb" : 80349, "imdb" : "tt0904208" }, "image" : { "medium" : "http://static.tvmaze.com/uploads/images/medium_portrait/0/250.jpg", "original" : "http://static.tvmaze.com/uploads/images/original_untouched/0/250.jpg" }, "summary" : "<p><b>Californication </b>is a comedy/drama series based around the writer Hank Moody. He moves to California and suffers a writers block as well as many other family and personal issues. His drinking and generally unhealthy lifestyle interrupts his relationships with his long term lover Karen and his daughter Becca as he struggles with his manager Charlie Runkle.</p>", "updated" : 1535457239, "_links" : { "self" : { "href" : "http://api.tvmaze.com/shows/28" }, "previousepisode" : { "href" : "http://api.tvmaze.com/episodes/1546" } } }
{ "_id" : ObjectId("62052b52d9ec2278a3f5933b"), "id" : 11, "url" : "http://www.tvmaze.com/shows/11/gotham", "name" : "Gotham", "type" : "Scripted", "language" : "English", "genres" : [ "Drama", "Action", "Crime" ], "status" : "Running", "runtime" : 60, "premiered" : "2014-09-22", "officialSite" : "http://www.fox.com/gotham", "schedule" : { "time" : "20:00", "days" : [ "Thursday" ] }, "rating" : { "average" : 7.8 }, "weight" : 99, "network" : { "id" : 4, "name" : "FOX", "country" : { "name" : "United States", "code" : "US", "timezone" : "America/New_York" } }, "webChannel" : null, "externals" : { "tvrage" : 38049, "thetvdb" : 274431, "imdb" : "tt3749900" }, "image" : { "medium" : "http://static.tvmaze.com/uploads/images/medium_portrait/166/416219.jpg", "original" : "http://static.tvmaze.com/uploads/images/original_untouched/166/416219.jpg" }, "summary" : "<p>The good. The evil. The beginning.</p><p>Everyone knows the name Commissioner Gordon. He is one of the crime world's greatest foes, a man whose reputation is synonymous with law and order. But what is known of Gordon's story and his rise from rookie detective to Police Commissioner? What did it take to navigate the multiple layers of corruption that secretly ruled Gotham City, the spawning ground of the world's most iconic villains? And what circumstances created them – the larger-than-life personas who would become Catwoman, The Penguin, The Riddler, Two-Face and The Joker?</p><p><b>Gotham </b>is an origin story of the great DC Comics Super-Villains and vigilantes, revealing an entirely new chapter that has never been told. It follows one cop's rise through a dangerously corrupt city teetering between good and evil, and chronicles the birth of one of the most popular super heroes 
of our time.</p>", "updated" : 1536171775, "_links" : { "self" : { "href" : "http://api.tvmaze.com/shows/11" }, "previousepisode" : { "href" : "http://api.tvmaze.com/episodes/1422374" }, "nextepisode" : { "href" : "http://api.tvmaze.com/episodes/1473788" } } }
Type "it" for more
>




























----------> CERTO... MAS 




SE O PROFESSOR ___ USAR AQUELE dataCursor,


 

 ELE TAMBÉM 
 VAI PODER ESCREVER/ACOPLAR UM METHOD DE 'forEach()'


 NELE...













 --> BEM, É CLARO QUE O USO de 'forEach()'




 VAI DEPENDER DO DRIVER QUE VOCÊ ESTÁ/ESTARÁ USANDO...













 --> MAS PARA O JAVASCRIPT,


 escrevemos realmente assim:











const dataCursor = db.movies.find({});




dataCursor.forEach();

















--> 'FOREACH'


vai sempre EXIGIR 1 FUNCTION/ANON FUNCTION,

QUE ESRÁ 



EXECUTADA __ PARA CADA ELMENT __ 








QUE SERÁ CARREGADO ATRAVÉS DO CURSOR...











ou seja,

algo como isto:





const dataCursor = db.movies.find({});




dataCursor.forEach(

    (document) => {
            console.log(document);
    }
);







--------------------------------------














OK... E ISSO REALMENTE FUNCIONARÁ... --> isso console.loggará 






CADA 'document' NESSE CURSOR de 'dataCursor'....














-> MAS É CLARO QUE 'console.log()' NÃO FARÁ O TRUQUE, AQUI.. -------> 



PARA CONSEGUIR PRINTAR NOSSOS DOCUMENTS,


VOCÊ __ PRECISA__ USAR 


o method de 'printjson'.... (que é do mongoshell, especificamente)....
















----------> O QUE ISSO FARÁ É 'CYCLE THROUGH ALL THE DOCUMENTS' QUE 



FICAM DENTRO DO CURSOR,




TODOS ELES 'DOCUMENTS QUE AINDA __ NÃO VIMOS'____ (DIDNT LOOK AT YET)....


(

    ISSO SIGNIFICA UQE 



    VAMOS VER TODOS OS __DOCUMENTS___ EXCETO__ 

    'glee' 



    e 

    aqueles outros 2 filmes, que já vimos por meio do uso de 'next()',


    tipo assim:




    db.movies.find({}).next();


)













-----------> CADA VEZ QUE EU EXECUTAR 


'cursorData.pretty()',




EU VOU ENCONTRAR MAIS 1 SET DE 20 DOCUMENTS...


























-_> ok.... isso significa que AO EXECUTAR 


''''


cursorData.forEach((doc) => {printjson(doc)})



'''',






NÓS ACABAMOS 



'EXPIRANDO' O 





'ONE-TIME USE'


desse cursor.... -----------> ISSO SIGNIFICA QUE 




SE NÓS 

T
ENTARMOS EXECUTAR 



'cursorData'



depois,

SOLTO,


ele não vai nos retornar coisa alguma... ------> isso pq 


o cursor já terá sido utilizado... ONE TIME ONLY, mesmo que ele esteja armazenado em uma const...


















-----> ok.... --> ESSA É UMA MANEIRA DE IR POR DENTRO DE TODOS OS DOCUMENTS,


O 


'forEach()'..















--> E É CLARO QUE 

 

 DENTRO DA FUNCTION QUE VOCÊ EXECUTA EM CADA DOCUMENT VOCê PODERIA/PODE TER 


 ALGUMA 



 CONDITION,
 UM 
 IF CHECK,

 CHECANDO 

 SE 


 AQUELE 


 DOCUMENT em que vocÊ está passando o loop possui uma determinada propriedade/key,





 ou se essa key é superior a um determinado value ($gt), 


 etc etc....




















 o método 'forEach()'


 não existe em alguns drivers....


















OBS --> esse 'printjson' dentro do RUN EM 'dataCursor'



SÓ 


vai ser executado EM 'DOCUMENTS QUE AINDA NÃO OLHAMOS/PASSAMOS POR DENTRO'... (the remaining documents on the cursor)...
























--> E O FOREACH já 



FAZ, AUTOMATICAMENTE,

O 

'RUN THROUGH'

de TODOS 


OS 


DOCUMENTS 


EM 1 DETERMINADO 


'cursor' (não é como 'next', que faz 1 por 1... não, o 'forEach' vai realmente extinguir os documents dentro do cursor...)





















-------> ok... MAS COMO ESCREVEMOS essa condition aí,

no caso, dentro do 'forEach'? 













--> OBS::: TENHA EM MENTE QUE 







USAR UMA CONDITION PARA 'FILTER OUT' um document é MENOS EFICIENTE DO QUE SIMPLESMENTE 



USAR 

UM 

FILTER PADRÃO DO MONGODB (como "$in", ou "$all") 



JÁ DE CARA, NO 'FIND()" method...













---> ISSO PQ SE VOCê USA UM DOS FILTERS ESPECIAIS DO MONGODB, QUE SÃO UTILIZADOS NO 'find()',



VOCÊ CONSEGUE '''NÃO FETCHEAR''' ESSES DOCUMENTS, QUE SÃO FILTRADOS LÁ NA DATABASE.... --> JÁ SE 

VOCÊ 



UTILIZA CONDITIONS DENTRO DESSE "() => {}"  do 


FOREACH 


para 



FILTRAR __ DOCUMENTS,

VOCê __ ACABA__ 


FAZENDO GET DE TODOS OS DOCUMENTS, PARA SÓ ENTÃO, MAIS TARDE,

OS FILTRAR (significa que a data já terá sido transmitida 'over the wire', o que é subóptimo).... 













-------> ESSE FILTERING POR MEIO DE CONDITIONS EM 'forEach(() => {})' É REALIZADO NO CLIENTSIDE (no seu servidor node, por exemplo),



E POR ISSO É MENOS EFETIVO DO QUE O FILTERING NO SERVERSIDE DO MONGODB....














--> MAS O QUE INTERESSA É QUE 

VOCÊ 

PODE 




RODAR ESSA LÓGICA EM "() => {}' do forEach 



EM CADA 

UM DOS DOCUMENTS NO CURSOR,



ou então 




USAR 

'.next()' 



PARA __ FETCHEAR__ APENAS 1 DOCUMENT 'AT A TIME'....














--> BTW, SE AGORA TENTAMOS EXECUTAR 


'.next()'


sobre 'cursorData' (CONST),





IMEDIATAMENTE RECEBEMOS UM ERROR,









A RAZÃO DISSO É QUE O CURSOR JÁ TERÁ SIDO 'EXHAUSTED',

C
OMO EXPLICADO ANTERIORMENTE....



















--> VOCÊ PODE CHECAR MANUALMENTE PELO 'EXHAUST'



DE 


UM 




CURSOR, POR MEIO DO METHOD DE '.hasNext',














que é executado assim:















dataCursor.hasNext()
















------> SE NÓS __ RECRÍARMOS NOSSO CURSOR,



COM AQUELE MESMO CÓDIGO DE 





'const dataCursor = db.movies.find()',






O METHOD DE 'dataCursor.hasNext()'




VAI RETORNAR 'TRUE',



pq 


AÍ 




ESSE CURSOR NÃO ESTARÁ MAIS EXTINTO, SEUS DOCUMENTS NÃO ESTARÃO MAIS 'GASTOS'....

















--> MAS COMO ISSO É UMA CONSTANTE (o 'cursorData', no nosso exemplo),




SOMOS OBRIGADOS A CRIAR UMA NOVA CONSTANTE com esse value,


tipo assim:








const newCursorData = db.movies.find({})



















EX:











> const newCursorData = db.movies.find({})
> newCursorData.hasNext()
true
> newCursorData.next()   
{
        "_id" : ObjectId("62052b52d9ec2278a3f59325"),
        "id" : 1,
        "url" : "http://www.tvmaze.com/shows/1/under-the-dome",
        "name" : "Under the Dome",
        "type" : "Scripted",
        "language" : "English",
        "genres" : [
                "Drama",
                "Science-Fiction",
                "Thriller"
        ],
        "status" : "Ended",
        "runtime" : 60,
        "premiered" : "2013-06-24",
        "officialSite" : "http://www.cbs.com/shows/under-the-dome/",
        "schedule" : {
                "time" : "22:00",
                "days" : [
                        "Thursday"
                ]
        },
        "rating" : {
                "average" : 6.5
        },
        "weight" : 91,
        "network" : {
                "id" : 2,
                "name" : "CBS",
                "country" : {
                        "name" : "United States",
                        "code" : "US",
                        "timezone" : "America/New_York"
                }
        },
        "webChannel" : null,
        "externals" : {
                "tvrage" : 25988,
                "thetvdb" : 264492,
                "imdb" : "tt1553656"
        },
        "image" : {
                "medium" : "http://static.tvmaze.com/uploads/images/medium_portrait/0/1.jpg",
                "original" : "http://static.tvmaze.com/uploads/images/original_untouched/0/1.jpg"
        },
        "summary" : "<p><b>Under the Dome</b> is the story of a small town that is suddenly and inexplicably sealed off from the rest of the world by an enormous transparent dome. The town's inhabitants must deal with surviving the post-apocalyptic conditions while searching for answers about the dome, where it came from and if and when it will go away.</p>",
        "updated" : 1529612668,
        "_links" : {
                "self" : {
                        "href" : "http://api.tvmaze.com/shows/1"
                },
                "previousepisode" : {
                        "href" : "http://api.tvmaze.com/episodes/185054"
                }
        }
}













----------------------------------



















OK... QUANDO TEMOS 'hasNext()'


nos retornando TRUE EM 1 CURSOR/resultado de um find, que é 'cursor',





PODEMOS 

CHAMAR '.next()'



nesse cursor...















--> É CLARO QUE HÁ MAIS UM PUNHADO DE COISAS QUE VOCÊ PODE FAZER COM CURSORS ---> HÁ OUTROS METHODS QUE VOCê PDOE EXECUTAR...











--> ISSO É ALGO QUE VOCê ENCONTRA NOS OFFICIAL DOCS...

















--> 'ITERATE A CURSOR IN THE MONGO SHELL '---> isso te diz mais sobre COMO USAR ESSE CURSOR,

 
 DIFERENTES MANEIRAS DE 'ITERATE THROUGH IT'... ----> E VEREMOS 







 TAMBÉM SOBRE COMO USAR O CURSOR NO AMBIENTE DE NOSSOS 'MONGODB DRIVERS'...











 -> MAS É IMPORTANTE VOCÊ ENTENDER O USO DE CURSORS ,E A RAZÃO DE ELES EXISTIREM....