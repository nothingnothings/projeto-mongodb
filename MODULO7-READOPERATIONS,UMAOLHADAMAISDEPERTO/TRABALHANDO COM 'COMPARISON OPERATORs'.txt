
















-----> O PROFESSOR MENCIONOU QUE EXISTEM MAIS OPERATORs...











-> A MELHOR MANEIRA DE APRENDER SOBRE TODOS ELES, 


e sobre 

'HAVE A LOOK AT THEM'



É VER OS OFFICIAL DOCS....













-> LÁ, NOS DOCS,




LÁ 

NA CATEGORIA DE 

'operators',



VOCê Vê OS 


'query and projection operators'... (que são nosso tópico de agora)...














--> AÍ VOCÊ VÊ AS DIFERENTES CATEGORAIS QUE EXISTEM:









1) comparison query operators 



2) logical query operators 


3) element query operators 



4) evaluation query operators 


5) geospatial query operators 



6) array query operators 



7) bitwise query operators 


8) $comment 




9) projection operators...















------> PROJECTION OPERATORS, E AÍ TODO O RESTO É 'query operators'...











---------> OK...



NA STARTING PAGE,



JÁ VEMOS ALGUNS QUERY SELECTORS...











--> TEMOS: 





1) '$eq' -->  'MATCHES VALUES THAT ARE EQUAL TO A SPECIFIED VALUE'...








2)'$gt' ---> MATCHES VALUES THAT ARE GREATER THAN A SPECIFIED VALUe...









3) ...










HÁ MAIS OPERATORS... PROFESSOR VAI NOS EXPLICAR MTOS DELES...














--> TODOS ESSES SÃO COMPARISON OPERATORS:




1) '$eq' -->  'MATCHES VALUES THAT ARE EQUAL TO A SPECIFIED VALUE'...








2)'$gt' ---> MATCHES VALUES THAT ARE GREATER THAN A SPECIFIED VALUe...









3) ...






















--> DE VOLTA A NOSSA DATABASE,

 













 O PROFESSOR 



 MOSTRA A QUERY QUE HAVIA ESCRITO ANTES:




db.movies.find(
    {runtime: 60}
)







--> 


OK... AGORA O PROFESSOR QUER ENCONTRAR TODOS OS MOVIES, NA NOSSA COLLECTION DE MOVIES,

EM QUE 




O 'runtime'

É __LOWER_ DO QUE 60....












-> vamos usar o operator de '$lt'...







ex:





db.movies.find(
    {runtime: {$lt: 60} }
)










----------------------------------------









ESCREVA 1 'document' no lado desse runtime,




PARA EVITAR O DEFAULT DE 'equality' (que sempre é assumido)...















OBS::: 

ESCREVER ISTO:








db.movies.find(
    {runtime: {$eq: 60} }
)




É EXATAMENTE A MESMA COISA QUE ESCREVER ISTO:





db.movies.find(
    {runtime:  60}
)





----------------------------------------------------------------------------------















-----> OK.... O '$eq' é meio inútil, portanto,


pq 



A OUTRA SINTAXE É UM 


SHORTCUT A ESSE MODO 




MAIS VERBOSE...













---> MAS É CLARO QUE EXISTEM UNS OPERATORS MALUCOS,


COMO 

'$ne',



QUE SIGNIFICA 'NOT EQUAL'...








eX:










db.movies.find(
    {runtime: {$ne: 60} }
)











-> VAI RETORNAR TODOS OS DOC QUE NÃO TENHAM UM VALOR DE RUNTIME IGUAL A 60...















--> O 'ne'

TAMBÉM É UM COMPARISON SELECTOR...











----------------------








CERTO...






CONTINUANDO:








1) '$eq' -->  'MATCHES VALUES THAT ARE EQUAL TO A SPECIFIED VALUE'...








2)'$gt' ---> MATCHES VALUES THAT ARE GREATER THAN A SPECIFIED VALUe...









3) "$ne' ---> MATCHES VALUES THAT ARE _ NOT EQUAL__ to a specified value (contrário de 'eq')....













4) ...

















OK... MAS HÁ OUTRO COMPARISON QUERY OPERATOR?











-----> 4) $lt -------> LOWER THAN..... ------> MENOR DO QUE 40 ....















--> ok, já conhecia isso...















5) $gte e $lte --------> É 'GREATER THAN AND EQUAL' E 'LOWER THAN AND EQUAL' (


    ou seja, 


    '>= '  e '=<'
)




















-----> OK.... É UMA COMBINAÇÃO DE 'eq' e 'lt/gt'...




















-> OK.... GTE E LTE,

BEM SIMPLES....




















-> MAIS ALGUM QUERY OPERATOR DE COMPARISON?









